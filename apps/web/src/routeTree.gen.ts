/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestonlyImport } from './routes/_guest_only'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as GuestonlyLoginImport } from './routes/_guest_only/login'
import { Route as AuthenticatedLibraryImport } from './routes/_authenticated/library'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/_dashboard'
import { Route as AuthenticatedVoteIndexImport } from './routes/_authenticated/vote.index'
import { Route as AuthenticatedPropositionsCreateImport } from './routes/_authenticated/propositions.create'
import { Route as AuthenticatedDashboardDashboardIndexImport } from './routes/_authenticated/_dashboard/dashboard/index'
import { Route as AuthenticatedVoteP1P2Import } from './routes/_authenticated/vote.$p1.$p2'
import { Route as AuthenticatedDashboardDashboardDilemmasImport } from './routes/_authenticated/_dashboard/dashboard/dilemmas'

// Create/Update Routes

const GuestonlyRoute = GuestonlyImport.update({
  id: '/_guest_only',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GuestonlyLoginRoute = GuestonlyLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestonlyRoute,
} as any)

const AuthenticatedLibraryRoute = AuthenticatedLibraryImport.update({
  id: '/library',
  path: '/library',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedVoteIndexRoute = AuthenticatedVoteIndexImport.update({
  id: '/vote/',
  path: '/vote/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedPropositionsCreateRoute =
  AuthenticatedPropositionsCreateImport.update({
    id: '/propositions/create',
    path: '/propositions/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardDashboardIndexRoute =
  AuthenticatedDashboardDashboardIndexImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const AuthenticatedVoteP1P2Route = AuthenticatedVoteP1P2Import.update({
  id: '/vote/$p1/$p2',
  path: '/vote/$p1/$p2',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardDashboardDilemmasRoute =
  AuthenticatedDashboardDashboardDilemmasImport.update({
    id: '/dashboard/dilemmas',
    path: '/dashboard/dilemmas',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_guest_only': {
      id: '/_guest_only'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestonlyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_dashboard': {
      id: '/_authenticated/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/library': {
      id: '/_authenticated/library'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof AuthenticatedLibraryImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_guest_only/login': {
      id: '/_guest_only/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestonlyLoginImport
      parentRoute: typeof GuestonlyImport
    }
    '/_authenticated/propositions/create': {
      id: '/_authenticated/propositions/create'
      path: '/propositions/create'
      fullPath: '/propositions/create'
      preLoaderRoute: typeof AuthenticatedPropositionsCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/vote/': {
      id: '/_authenticated/vote/'
      path: '/vote'
      fullPath: '/vote'
      preLoaderRoute: typeof AuthenticatedVoteIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_dashboard/dashboard/dilemmas': {
      id: '/_authenticated/_dashboard/dashboard/dilemmas'
      path: '/dashboard/dilemmas'
      fullPath: '/dashboard/dilemmas'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardDilemmasImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/vote/$p1/$p2': {
      id: '/_authenticated/vote/$p1/$p2'
      path: '/vote/$p1/$p2'
      fullPath: '/vote/$p1/$p2'
      preLoaderRoute: typeof AuthenticatedVoteP1P2Import
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_dashboard/dashboard/': {
      id: '/_authenticated/_dashboard/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardIndexImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedDashboardRouteChildren {
  AuthenticatedDashboardDashboardDilemmasRoute: typeof AuthenticatedDashboardDashboardDilemmasRoute
  AuthenticatedDashboardDashboardIndexRoute: typeof AuthenticatedDashboardDashboardIndexRoute
}

const AuthenticatedDashboardRouteChildren: AuthenticatedDashboardRouteChildren =
  {
    AuthenticatedDashboardDashboardDilemmasRoute:
      AuthenticatedDashboardDashboardDilemmasRoute,
    AuthenticatedDashboardDashboardIndexRoute:
      AuthenticatedDashboardDashboardIndexRoute,
  }

const AuthenticatedDashboardRouteWithChildren =
  AuthenticatedDashboardRoute._addFileChildren(
    AuthenticatedDashboardRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRouteWithChildren
  AuthenticatedLibraryRoute: typeof AuthenticatedLibraryRoute
  AuthenticatedPropositionsCreateRoute: typeof AuthenticatedPropositionsCreateRoute
  AuthenticatedVoteIndexRoute: typeof AuthenticatedVoteIndexRoute
  AuthenticatedVoteP1P2Route: typeof AuthenticatedVoteP1P2Route
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRouteWithChildren,
  AuthenticatedLibraryRoute: AuthenticatedLibraryRoute,
  AuthenticatedPropositionsCreateRoute: AuthenticatedPropositionsCreateRoute,
  AuthenticatedVoteIndexRoute: AuthenticatedVoteIndexRoute,
  AuthenticatedVoteP1P2Route: AuthenticatedVoteP1P2Route,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface GuestonlyRouteChildren {
  GuestonlyLoginRoute: typeof GuestonlyLoginRoute
}

const GuestonlyRouteChildren: GuestonlyRouteChildren = {
  GuestonlyLoginRoute: GuestonlyLoginRoute,
}

const GuestonlyRouteWithChildren = GuestonlyRoute._addFileChildren(
  GuestonlyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedDashboardRouteWithChildren
  '/library': typeof AuthenticatedLibraryRoute
  '/login': typeof GuestonlyLoginRoute
  '/propositions/create': typeof AuthenticatedPropositionsCreateRoute
  '/vote': typeof AuthenticatedVoteIndexRoute
  '/dashboard/dilemmas': typeof AuthenticatedDashboardDashboardDilemmasRoute
  '/vote/$p1/$p2': typeof AuthenticatedVoteP1P2Route
  '/dashboard': typeof AuthenticatedDashboardDashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedDashboardRouteWithChildren
  '/library': typeof AuthenticatedLibraryRoute
  '/login': typeof GuestonlyLoginRoute
  '/propositions/create': typeof AuthenticatedPropositionsCreateRoute
  '/vote': typeof AuthenticatedVoteIndexRoute
  '/dashboard/dilemmas': typeof AuthenticatedDashboardDashboardDilemmasRoute
  '/vote/$p1/$p2': typeof AuthenticatedVoteP1P2Route
  '/dashboard': typeof AuthenticatedDashboardDashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_guest_only': typeof GuestonlyRouteWithChildren
  '/_authenticated/_dashboard': typeof AuthenticatedDashboardRouteWithChildren
  '/_authenticated/library': typeof AuthenticatedLibraryRoute
  '/_guest_only/login': typeof GuestonlyLoginRoute
  '/_authenticated/propositions/create': typeof AuthenticatedPropositionsCreateRoute
  '/_authenticated/vote/': typeof AuthenticatedVoteIndexRoute
  '/_authenticated/_dashboard/dashboard/dilemmas': typeof AuthenticatedDashboardDashboardDilemmasRoute
  '/_authenticated/vote/$p1/$p2': typeof AuthenticatedVoteP1P2Route
  '/_authenticated/_dashboard/dashboard/': typeof AuthenticatedDashboardDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/library'
    | '/login'
    | '/propositions/create'
    | '/vote'
    | '/dashboard/dilemmas'
    | '/vote/$p1/$p2'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/library'
    | '/login'
    | '/propositions/create'
    | '/vote'
    | '/dashboard/dilemmas'
    | '/vote/$p1/$p2'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_guest_only'
    | '/_authenticated/_dashboard'
    | '/_authenticated/library'
    | '/_guest_only/login'
    | '/_authenticated/propositions/create'
    | '/_authenticated/vote/'
    | '/_authenticated/_dashboard/dashboard/dilemmas'
    | '/_authenticated/vote/$p1/$p2'
    | '/_authenticated/_dashboard/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  GuestonlyRoute: typeof GuestonlyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  GuestonlyRoute: GuestonlyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/_guest_only"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_dashboard",
        "/_authenticated/library",
        "/_authenticated/propositions/create",
        "/_authenticated/vote/",
        "/_authenticated/vote/$p1/$p2"
      ]
    },
    "/_guest_only": {
      "filePath": "_guest_only.tsx",
      "children": [
        "/_guest_only/login"
      ]
    },
    "/_authenticated/_dashboard": {
      "filePath": "_authenticated/_dashboard.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_dashboard/dashboard/dilemmas",
        "/_authenticated/_dashboard/dashboard/"
      ]
    },
    "/_authenticated/library": {
      "filePath": "_authenticated/library.tsx",
      "parent": "/_authenticated"
    },
    "/_guest_only/login": {
      "filePath": "_guest_only/login.tsx",
      "parent": "/_guest_only"
    },
    "/_authenticated/propositions/create": {
      "filePath": "_authenticated/propositions.create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/vote/": {
      "filePath": "_authenticated/vote.index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_dashboard/dashboard/dilemmas": {
      "filePath": "_authenticated/_dashboard/dashboard/dilemmas.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/vote/$p1/$p2": {
      "filePath": "_authenticated/vote.$p1.$p2.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_dashboard/dashboard/": {
      "filePath": "_authenticated/_dashboard/dashboard/index.tsx",
      "parent": "/_authenticated/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
