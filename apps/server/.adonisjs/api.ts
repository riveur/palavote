// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type AuthMeGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/user_info_controller.ts').default['me'], false>
}
type AuthRedirectGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/discord_controller.ts').default['redirect'], false>
}
type AuthCallbackGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/discord_controller.ts').default['callback'], false>
}
type AuthAnonymousPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/auth/controllers/anonymous_controller.ts').default['validator']>>
  response: MakeTuyauResponse<import('../app/auth/controllers/anonymous_controller.ts').default['execute'], true>
}
type AuthLogoutPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/logout_controller.ts').default['execute'], false>
}
type DilemmasVotePost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/vote/controllers/vote_dilemma_controller.ts').default['validator']>>
  response: MakeTuyauResponse<import('../app/vote/controllers/vote_dilemma_controller.ts').default['execute'], true>
}
type DilemmasPickGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/vote/controllers/pick_dilemma_controller.ts').default['execute'], false>
}
type DilemmasIdIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/vote/controllers/show_dilemma_controller.ts').default['execute'], false>
}
type DilemmasPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/vote/controllers/store_dilemma_controller.ts').default['#validator']>>
  response: MakeTuyauResponse<import('../app/vote/controllers/store_dilemma_controller.ts').default['execute'], true>
}
type PropositionsUploadPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/vote/controllers/upload_proposition_image_controller.ts').default['#validator']>>
  response: MakeTuyauResponse<import('../app/vote/controllers/upload_proposition_image_controller.ts').default['execute'], true>
}
type DilemmasGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/vote/controllers/list_dilemma_controller.ts').default['execute'], false>
}
export interface ApiDefinition {
  'auth': {
    'me': {
      '$url': {
      };
      '$get': AuthMeGetHead;
      '$head': AuthMeGetHead;
    };
    'redirect': {
      '$url': {
      };
      '$get': AuthRedirectGetHead;
      '$head': AuthRedirectGetHead;
    };
    'callback': {
      '$url': {
      };
      '$get': AuthCallbackGetHead;
      '$head': AuthCallbackGetHead;
    };
    'anonymous': {
      '$url': {
      };
      '$post': AuthAnonymousPost;
    };
    'logout': {
      '$url': {
      };
      '$post': AuthLogoutPost;
    };
  };
  'dilemmas': {
    'vote': {
      '$url': {
      };
      '$post': DilemmasVotePost;
    };
    'pick': {
      '$url': {
      };
      '$get': DilemmasPickGetHead;
      '$head': DilemmasPickGetHead;
    };
    ':firstProp': {
      ':secondProp': {
        '$url': {
        };
        '$get': DilemmasIdIdGetHead;
        '$head': DilemmasIdIdGetHead;
      };
    };
    '$url': {
    };
    '$post': DilemmasPost;
    '$get': DilemmasGetHead;
    '$head': DilemmasGetHead;
  };
  'propositions': {
    'upload': {
      '$url': {
      };
      '$post': PropositionsUploadPost;
    };
  };
}
const routes = [
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
